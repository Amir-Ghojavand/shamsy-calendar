name: Build Scal CLI

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      # ... (checkout, setup-go, build steps) ...
      - name: Create .deb package
        if: matrix.goos == 'linux'
        run: |
          mkdir -p deb/scal/usr/local/bin
          cp artifacts/scal-${{ matrix.goos }}-${{ matrix.goarch }} deb/scal/usr/local/bin/scal
          mkdir -p deb/scal/DEBIAN
          cat > deb/scal/DEBIAN/control <<EOF
          Package: scal
          Version: 1.0.0
          Architecture: ${{ matrix.goarch }}
          Maintainer: Aria (Amir) Ghojavand <ariaghojavand@gmail.com>
          Description: Scal CLI tool
          EOF
          dpkg-deb --build deb/scal
          mv deb/scal.deb artifacts/scal-${{ matrix.goos }}-${{ matrix.goarch }}.deb
      - name: Create .rpm package
        if: matrix.goos == 'linux'
        run: |
          mkdir -p rpm/BUILD rpm/RPMS rpm/SPECS
          cp artifacts/scal-${{ matrix.goos }}-${{ matrix.goarch }} rpm/BUILD/scal
          cat > rpm/SPECS/scal.spec <<EOF
          Name: scal
          Version: 1.0.0
          Summary: Scal CLI tool
          %install
          mkdir -p %{buildroot}/usr/local/bin
          cp %{_builddir}/scal %{buildroot}/usr/local/bin/scal
          %files
          /usr/local/bin/scal
          EOF
          rpmbuild --define "_topdir $(pwd)/rpm" -bb rpm/SPECS/scal.spec
          rpm_file=$(find rpm/RPMS -name "*.rpm")
          mv "$rpm_file" artifacts/scal-${{ matrix.goos }}-${{ matrix.goarch }}.rpm
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scal-${{ matrix.goos }}-${{ matrix.goarch }}
          path: artifacts/*
