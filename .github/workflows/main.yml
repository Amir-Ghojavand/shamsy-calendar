name: Build and Package

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: scal
      VERSION: 1.0.0
      ARCH: amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build Linux binary
      run: GOOS=linux GOARCH=${{ env.ARCH }} go build -o ${{ env.APP_NAME }}-linux

    - name: Build Windows binary
      run: GOOS=windows GOARCH=${{ env.ARCH }} go build -o ${{ env.APP_NAME }}.exe

    - name: Build macOS binary
      run: GOOS=darwin GOARCH=${{ env.ARCH }} go build -o ${{ env.APP_NAME }}-macos

    - name: Install deb and rpm tools
      run: sudo apt-get update && sudo apt-get install -y dpkg rpm

    - name: Create .deb package
      run: |
        mkdir -p ${{ env.APP_NAME }}_deb/usr/local/bin
        cp ${{ env.APP_NAME }}-linux ${{ env.APP_NAME }}_deb/usr/local/bin/${{ env.APP_NAME }}
        chmod 755 ${{ env.APP_NAME }}_deb/usr/local/bin/${{ env.APP_NAME }}

        mkdir -p ${{ env.APP_NAME }}_deb/DEBIAN
        echo "Package: ${{ env.APP_NAME }}" > ${{ env.APP_NAME }}_deb/DEBIAN/control
        echo "Version: ${{ env.VERSION }}" >> ${{ env.APP_NAME }}_deb/DEBIAN/control
        echo "Section: utils" >> ${{ env.APP_NAME }}_deb/DEBIAN/control
        echo "Priority: optional" >> ${{ env.APP_NAME }}_deb/DEBIAN/control
        echo "Architecture: ${{ env.ARCH }}" >> ${{ env.APP_NAME }}_deb/DEBIAN/control
        echo "Maintainer: Your Name <you@example.com>" >> ${{ env.APP_NAME }}_deb/DEBIAN/control
        echo "Description: ${{ env.APP_NAME }} - A Go CLI app" >> ${{ env.APP_NAME }}_deb/DEBIAN/control

        dpkg-deb --build ${{ env.APP_NAME }}_deb

    - name: Create .rpm package
      run: |
        mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
        mkdir -p ${{ env.APP_NAME }}-${{ env.VERSION }}
        cp ${{ env.APP_NAME }}-linux ${{ env.APP_NAME }}-${{ env.VERSION }}/
        tar czf ${{ env.APP_NAME }}-${{ env.VERSION }}.tar.gz ${{ env.APP_NAME }}-${{ env.VERSION }}
        mv ${{ env.APP_NAME }}-${{ env.VERSION }}.tar.gz ~/rpmbuild/SOURCES/

        cat << 'EOF' > ~/rpmbuild/SPECS/${{ env.APP_NAME }}.spec
Name:           scal
Version:        1.0.0
Release:        1%{?dist}
Summary:        scal - A Go CLI tool
License:        MIT
Source0:        scal-1.0.0.tar.gz

BuildRequires:  golang
Requires:

%prep
%setup -q

%build
GOOS=linux GOARCH=amd64 go build -o scal

%install
mkdir -p %{buildroot}/usr/local/bin
install -m 0755 scal %{buildroot}/usr/local/bin/scal

%files
/usr/local/bin/scal

%changelog
* Wed Jul 31 2025 Aria(amir) Ghojavand - 1.0.0-1
- Initial RPM build
EOF

        rpmbuild -ba ~/rpmbuild/SPECS/scal.spec

    - name: Upload Linux binary
      uses: actions/upload-artifact@v3
      with:
        name: scal-linux
        path: scal-linux

    - name: Upload Windows binary
      uses: actions/upload-artifact@v3
      with:
        name: scal-windows.exe
        path: scal.exe

    - name: Upload macOS binary
      uses: actions/upload-artifact@v3
      with:
        name: scal-macos
        path: scal-macos

    - name: Upload .deb
      uses: actions/upload-artifact@v3
      with:
        name: scal.deb
        path: scal_deb.deb

    - name: Upload .rpm
      uses: actions/upload-artifact@v3
      with:
        name: scal.rpm
        path: ~/rpmbuild/RPMS/x86_64/scal-1.0.0-1*.rpm
