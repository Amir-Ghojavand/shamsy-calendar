name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build Scal CLI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - run: go mod download

      - name: Install packaging deps
        if: matrix.goos == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm dpkg-dev

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p artifacts
          BIN=scal-${{ matrix.goos }}-${{ matrix.goarch }}
          [ "${{ matrix.goos }}" = "windows" ] && BIN=$BIN.exe
          go build -o artifacts/$BIN .

      - name: Create .deb
        if: matrix.goos == 'linux'
        run: |
          BIN=scal-${{ matrix.goos }}-${{ matrix.goarch }}
          mkdir -p deb/scal/usr/local/bin deb/scal/DEBIAN
          cp artifacts/$BIN deb/scal/usr/local/bin/scal
          chmod +x deb/scal/usr/local/bin/scal
          cat >deb/scal/DEBIAN/control <<EOF
          Package: scal
          Version: 1.0.0
          Section: utils
          Priority: optional
          Architecture: ${{ matrix.goarch }}
          Maintainer: Aria (Amir) Ghojavand <ariaghojavand@gmail.com>
          Description: Scal CLI tool
          Homepage: https://github.com/ariaghojavand/scal
          EOF
          dpkg-deb --build deb/scal
          mv deb/scal.deb artifacts/scal-${{ matrix.goos }}-${{ matrix.goarch }}.deb

      - name: Create .rpm (x86_64 only)
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
        run: |
          ARCH=x86_64
          BIN=scal-linux-amd64
          mkdir -p rpm/BUILD rpm/RPMS/$ARCH rpm/SOURCES rpm/SPECS rpm/SRPMS
          cp artifacts/$BIN rpm/BUILD/scal
          chmod +x rpm/BUILD/scal
          cat >rpm/SPECS/scal.spec <<EOF
          Name: scal
          Version: 1.0.0
          Release: 1
          Summary: Scal CLI tool
          License: MIT
          Packager: Aria Ghojavand <ariaghojavand@gmail.com>
          BuildArch: $ARCH
          
          %description
          Scal CLI tool
          
          %install
          mkdir -p %{buildroot}/usr/local/bin
          install -m 0755 %{_topdir}/BUILD/scal %{buildroot}/usr/local/bin/scal
          
          %files
          /usr/local/bin/scal
          
          %changelog
          * $(date +"%a %b %d %Y") Aria Ghojavand <ariaghojavand@gmail.com> 1.0.0-1
          - Initial release
          EOF
          rpmbuild --define "_topdir $(pwd)/rpm" --target "$ARCH" -bb rpm/SPECS/scal.spec
          mv rpm/RPMS/$ARCH/scal-1.0.0-1.$ARCH.rpm artifacts/scal-linux-amd64.rpm

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scal-artifacts
          path: artifacts/*

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    # only run this job when the ref is a tag like v1.2.3
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: scal-artifacts

      - id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Scal CLI ${{ github.ref_name }}
          body: |
            ## Changelog
            - Automated release for ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: artifacts/*        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
